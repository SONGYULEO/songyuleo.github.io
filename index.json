[{"categories":["C Sharp 筆記"],"content":"呼 已經許久沒更新文章了，距離上一次是2018…，當然這之中也經歷了職涯轉換、\u0008部落格由原本的Hexo 換到Hugo 等，再來陸陸續續會慢慢整理弄上來\u0008\u0008\u0008\u0008\u0008。 相信在公司碰過文件轉換的需求（如word to pdf），特別又是office 系列一定用過DCOM來處理這個問題，但微軟已經不support 這個元件，所以使用上只能祈禱不會遇到問題。。（偏偏就是遇到問題了這篇才生出來的 所以就開始Survey 一些不靠DCOM也能轉的套件，找了幾間最後還是看上 Aspose \u0008，聯絡了一下拿到了 Temporary License 但原先提供的simple code 看似兩三行可以解決，純英文的文件或許可行，但遇到其他語言如高綿文就會發現轉出來的PDF還是會有亂碼。。。 Aspose.Words.License lic = new Aspose.Words.License(); lic.SetLicense(path + \"Aspose.Words.lic\"); Document doc = new Document(path + \"input.docx\"); doc.Save(path + \"output.pdf\"); 後來得知需要 Enable OpenType Features 才行～ ","date":"2021-04-21","objectID":"/aspose/:0:0","tags":["C Sharp","DotNet 5"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"1. Nuget 安裝要先從Nuget安裝以下兩個套件 Aspose.Words Aspose.Words.Shaping.HarfBuzz ","date":"2021-04-21","objectID":"/aspose/:1:0","tags":["C Sharp","DotNet 5"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"2. 範例(ps.範例為原始word轉pdf) MemoryStream ms = new MemoryStream(); uploadfile.CopyTo(ms); Document doc = new Document(ms); var path = @\"./file/\" + uploadfile.FileName\".pdf\"; doc.LayoutOptions.TextShaperFactory = Aspose.Words.Shaping.HarfBuzz.HarfBuzzTextShaperFactory.Instance; doc.Save(path); ","date":"2021-04-21","objectID":"/aspose/:2:0","tags":["C Sharp","DotNet 5"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"在開發期間使用的Entity是在test環境下，但要切換到正式環境不用整個專案review一次或者把entity拿掉才能切換過去，不能針對xxx.edmx底下的DbContext直接修改，這是系統自動產生的，但可以再另外partail class要切換的Connection name 。 ps.這邊是系統自動產生，不要在這邊修改 ","date":"2018-12-02","objectID":"/entityswitch/:0:0","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityswitch/"},{"categories":["C Sharp 筆記"],"content":"1. 解說","date":"2018-12-02","objectID":"/entityswitch/:1:0","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityswitch/"},{"categories":["C Sharp 筆記"],"content":"1.1 在專案中產生一個Partial class public partial class Entities : DbContext { public Entities (string ConnectionString):base(ConnectionString) { } } public class SwitchDbContext { public Entities CreateDbContext(string connectionstring) { switch (connectionstring) { //QA連線 case \"QA\": return new Entities(); //Production連線 case \"Production\": return new Entities(\"name=EntitiesP\"); //預設為QA連線 default: return new Entities(); } } } ","date":"2018-12-02","objectID":"/entityswitch/:1:1","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityswitch/"},{"categories":["C Sharp 筆記"],"content":"1.2 修改設定檔接下來到app.config or web.config 裡面找到\u003cappSettings\u003e加入這些，這樣未來只要改app.config or web.config就能切換。 一樣到app.config or web.config 裡面找到\u003cconnectionStrings\u003e後複製name=Entities這一條，在下方貼上並將name改成EntitiesP，ConnectionString需自行修改成自己的正式環境資訊。 接下來在原先宣告Entity的地方改成如下圖,如需切換Entity Connection只要修改app.config or web.config裡面的內容就好了。 ","date":"2018-12-02","objectID":"/entityswitch/:1:2","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityswitch/"},{"categories":["JQuery 筆記"],"content":"紀錄一下許早之前遇到的Cross-Domain問題，在Local測試得很開心都沒問題，一把東西丟到測試環境這問題就出現了… 原因可以參考WIKI的介紹Cross-origin resource sharing 簡單來說用Ajax向非同域請求資源會先丟一個預檢(preflight) HTTP OPTIONS 的方法給Server端檢驗，若通過才會丟正式的request出去(get、post等等)，若非允許的跨域請求的需求沒有處理會被Reject，造成Ajax失敗，解法有很多種，但我還是用最簡單的方式Access-Control-Allow-Origin針對server端處理。 ","date":"2018-09-12","objectID":"/cross_domain/:0:0","tags":["C Sharp","JQuery","JavaScript"],"title":"[C#、JQuery]Cross-Domain server 端處理","uri":"/cross_domain/"},{"categories":["JQuery 筆記"],"content":"1. 解說web.config內的\u003csystem.webServer\u003e加入紅框部分，*代表允許任何人存取 注意:這樣的方式很快但不代表適合任何人，若要限制也可以這樣寫Access-Control-Allow-Origin: http://xxxxx.com 其他也有JsonP的方式也是不錯的方式，有機會再發表一篇來解說吧~","date":"2018-09-12","objectID":"/cross_domain/:1:0","tags":["C Sharp","JQuery","JavaScript"],"title":"[C#、JQuery]Cross-Domain server 端處理","uri":"/cross_domain/"},{"categories":["C Sharp 筆記"],"content":"User這次給了一道題目，按照指定的規則且多個條件下排序資料…，這非得要實作IComparable來實現了。 在範例中有以下幾個重點 第一次排序為指定順序(Space冒號前的字串先排序) 第二次排序為小到大排序(Space整個排序) 第三次排序為小到大排序(Item排序) ","date":"2018-07-21","objectID":"/csharp1/:0:0","tags":["C Sharp"],"title":"[C#]自訂排序(Custom Sort)","uri":"/csharp1/"},{"categories":["C Sharp 筆記"],"content":"1. Example","date":"2018-07-21","objectID":"/csharp1/:1:0","tags":["C Sharp"],"title":"[C#]自訂排序(Custom Sort)","uri":"/csharp1/"},{"categories":["JQuery 筆記"],"content":"對於前端來說，許多專案針對Form的需求設計應該是百百種，常見的如動態欄位(Dynamic column)，本篇使用Jquery來實現 ","date":"2018-07-14","objectID":"/jq1/:0:0","tags":["JQuery","JavaScript"],"title":"[JQuery]動態欄位(Dynamic column)","uri":"/jq1/"},{"categories":["JQuery 筆記"],"content":"1. ExampleSee the Pen Dynamic colunm by LeoHe (@SungYuHe) on CodePen. ","date":"2018-07-14","objectID":"/jq1/:1:0","tags":["JQuery","JavaScript"],"title":"[JQuery]動態欄位(Dynamic column)","uri":"/jq1/"},{"categories":["AngularJs 筆記"],"content":"公司專案使用AngularJs 1.6開發,面對使用者複雜又特殊的requirement ，一個page切多個controller也方便未來維護，那controller間如何來互相傳值呢? 在AngularJs中 $emit , $broadcast and $on 用來處理各controller事件處理 $on用來接收$emit , $broadcast的事件(event) $emit能向父級別parent controller傳遞事件(event)與資料(data) $broadcast向子級別child controller傳遞事件(event)與資料(data) ","date":"2018-06-09","objectID":"/angular1/:0:0","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angular1/"},{"categories":["AngularJs 筆記"],"content":"1. 說明 若同父級別向子級別傳遞事件($broadcast)，多個同level子級別的controller 可以一起接收到事件,但其中一個子級別傳遞事件($emit)，只有這個子級別的父級別可以收到事件，其他同level父級別controller無法收到事件 ","date":"2018-06-09","objectID":"/angular1/:1:0","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angular1/"},{"categories":["AngularJs 筆記"],"content":"1. ExampleSee the Pen AngularJs $emit , $broadcast and $on Example Note by LeoHe (@SungYuHe) on CodePen. ","date":"2018-06-09","objectID":"/angular1/:1:1","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angular1/"},{"categories":["AngularJs 筆記"],"content":"2. 參考AngularJs function ","date":"2018-06-09","objectID":"/angular1/:1:2","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angular1/"},{"categories":null,"content":"簡介一個從南跑到北的軟體人，熱愛探索軟硬體相關資訊， 曾開發過Fin-tech 程式交易(with C++)、補習班後勤管理系統(with php \u0026 mysql)、Global MES integration system (with AngularJs \u0026 C#)… 現任職於某金融公司著重於 ERP開發 由於工作所學甚多，常常筆記丟東丟西，乾脆弄一個blog來記錄、整理一下順便也幫自己複習一下… ","date":"0001-01-01","objectID":"/page/about/:0:1","tags":null,"title":"About Me","uri":"/page/about/"}]