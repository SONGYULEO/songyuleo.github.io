[{"categories":["Kubernetes 筆記"],"content":"許多玩容器化的人均會面臨到「如何將環境變數設定」映射到應用程式內，因應目的不同多個環境(Dev、UAT、PROD等)該怎配置?，這邊手頭上目前碰到的組合.NET Core 6 + Azure DevOps CD + AKS 來說明 ","date":"2022-03-01","objectID":"/kubernetes1/:0:0","tags":["ASP.NET Core","Kubernetes","DevOps"],"title":"[Kubernetes]如何讓ASP.NET Core在AKS 和 Azure DevOps CD 中綁訂環境變數","uri":"/kubernetes1/"},{"categories":["Kubernetes 筆記"],"content":"1. Kubernetes(k8s) 變數簡介k8s要設定環境變數絕對會看過兩個配置：ConfigMaps、Secrets，這兩項還不是很清楚也可以參考官方對於configmap和secrets的解說，以下為一張運用場景圖 ","date":"2022-03-01","objectID":"/kubernetes1/:1:0","tags":["ASP.NET Core","Kubernetes","DevOps"],"title":"[Kubernetes]如何讓ASP.NET Core在AKS 和 Azure DevOps CD 中綁訂環境變數","uri":"/kubernetes1/"},{"categories":["Kubernetes 筆記"],"content":"2. ASP.NET Core 部分在開發角度很常如圖這樣設定變數，像是DB Connection也會在appsettings.XXX.json其中(擷取其中一段) \"ConnectionStrings\": { \"Identity\": \"server=xxxxxxxxx;port=3306;database=xxxxxx;uid={userid};pwd={password};sslmode=Preferred\" }, \"Identity\": { \"UserId\": \"xxxxxx\", \"Password\": \"xxxxxxxx\" }, 但如果透過CD又佈署到環境該如何依照所屬環境參考變數? ","date":"2022-03-01","objectID":"/kubernetes1/:2:0","tags":["ASP.NET Core","Kubernetes","DevOps"],"title":"[Kubernetes]如何讓ASP.NET Core在AKS 和 Azure DevOps CD 中綁訂環境變數","uri":"/kubernetes1/"},{"categories":["Kubernetes 筆記"],"content":"3. Azure Devops CD(Release)在CD過程中會將image 透過yaml撰寫佈署描述來執行(Deployments、ReplicaSet等)，而在其中會有定義環境參考的敘述 identity/deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: identity labels: app: identity namespace: auth spec: replicas: 1 selector: matchLabels: app: identity template: metadata: labels: app: identity spec: containers: - name: identity image: xxx/identity:latest ports: - containerPort: 80 env: - name: ConnectionStrings__Identity valueFrom: configMapKeyRef: name: xxx-configs key: db.connection - name: Identity__Password valueFrom: secretKeyRef: name: xxx-secret key: db.password - name: Identity__UserId valueFrom: secretKeyRef: name: xxx-secret key: db.username 會看到env區塊有與在程式端環境設定檔相似的變數參照，而configMapKeyRef和secretKeyRef敘述則為k8s環境中變數實際的名稱和對應映射Key，但這邊設定完先確認k8s上是否設定ConfigMap和Secret了沒，不然可能因為k8s上還沒設定ConfigMap和Secret而參照不到失敗! ","date":"2022-03-01","objectID":"/kubernetes1/:3:0","tags":["ASP.NET Core","Kubernetes","DevOps"],"title":"[Kubernetes]如何讓ASP.NET Core在AKS 和 Azure DevOps CD 中綁訂環境變數","uri":"/kubernetes1/"},{"categories":["Kubernetes 筆記"],"content":"4. Kubernetes上的環境變數設定首先我們要準備兩份yaml檔，各別為ConfigMap和Secret，並設定到k8s ","date":"2022-03-01","objectID":"/kubernetes1/:4:0","tags":["ASP.NET Core","Kubernetes","DevOps"],"title":"[Kubernetes]如何讓ASP.NET Core在AKS 和 Azure DevOps CD 中綁訂環境變數","uri":"/kubernetes1/"},{"categories":["Kubernetes 筆記"],"content":"ps. 建議 將機敏資訊存放於Secret中(預設使用Opaque type 且為base64編碼方式)!!ConfigMap apiVersion: v1 kind: ConfigMap metadata: name: xxx-configs namespace: auth data: db.connection: \u003e- server=xxxxx;port=3306;database=xxxx;uid={userid};pwd={password};sslmode=Preferred Secret apiVersion: v1 kind: Secret metadata: name: xxx-secret namespace: auth type: Opaque data: db.password: dGVzdA== db.username: dGVzdDEyMzQ= ","date":"2022-03-01","objectID":"/kubernetes1/:4:1","tags":["ASP.NET Core","Kubernetes","DevOps"],"title":"[Kubernetes]如何讓ASP.NET Core在AKS 和 Azure DevOps CD 中綁訂環境變數","uri":"/kubernetes1/"},{"categories":["Kubernetes 筆記"],"content":"參考Kubernetes.io 以上完成就可以享受設定的成果~ ","date":"2022-03-01","objectID":"/kubernetes1/:5:0","tags":["ASP.NET Core","Kubernetes","DevOps"],"title":"[Kubernetes]如何讓ASP.NET Core在AKS 和 Azure DevOps CD 中綁訂環境變數","uri":"/kubernetes1/"},{"categories":["專案管理 筆記"],"content":"延續上次敏捷管理實務Part1 內容，本篇針對Scrum流派的實務內容和甚麼是所謂的最小可行性產品介紹~ ","date":"2021-12-26","objectID":"/projectmanagent2/:0:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"1. Scrum框架下的\"3355\"Scrum下3355為其實務執行的核心，指的是 3個角色(scrum roles) 3個工單(scrum artifacts) 5個事件(scrum events) 5個價值(scrum values) 參考 ","date":"2021-12-26","objectID":"/projectmanagent2/:1:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"接下來逐步講解這些概念 ","date":"2021-12-26","objectID":"/projectmanagent2/:1:1","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"3個角色(scrum roles)\r從以上可以發現三個角色為Scrum執行團隊的主軸，SM負責保持專案執行Scrum的各項精神和協調，PO則為產品需求的規劃和來源，Dev Team則為產品技術端設計和實作，也為Scrum起頭實作最為重的關鍵 ","date":"2021-12-26","objectID":"/projectmanagent2/:1:2","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"3個工單(scrum artifacts) Product Backlog(PBL)：將目標轉化成能夠實作的細節的工具為產品需求規格文件(PRD)或稱軟體需求規格書(SRS)，在瀑布式專案管理下，此份文件為最重要且也為「產品經理與開發團隊溝通」的第一步；而在敏捷式管理提到「可用的軟體重於詳盡的文件」，不必於最初將各種文件詳細產出，但還是要依照節奏依序將需求完善(PBL)，要素參考下圖 Sprint Backlog：有了前面的PBL後，開始依照優先序放到Sprint中，團隊針對每個 Sprint 關注這次需要完成和增量的PBL項目和其展開的工作內容，下圖為Azure DevOps實作Scrum例子 Product Increment：又稱產品增量，每個Sprint 完成PBL後「滿足驗收條件」並為「已完成」的增量或內容，通常為可產生產品價值部分，如功能或產品等 ","date":"2021-12-26","objectID":"/projectmanagent2/:1:3","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"5個事件(scrum events) Sprint(衝刺) ：指的是每個連續開發週期，也含各個會議的流程，這邊的週期單位則以Iteration(迭代)來表示，通常會設定在1-4周之間，並在每個Sprint 執行相同的Iteration 時間循環(節奏)。 Sprint Plan Meeting ：為Sprint中，不可缺少的會議之一，內容參考下方表格說明 ITEM 詳細說明 WHY 為即將要開展的Sprint指定計劃 WHO Scrum Team WHEN Sprint第一天 WHAT 本sprint要交付的內容如何完成，由PO講述Product Backlog 與Acceptance \u003eCriteria，並由開發團隊評估Product Backlog 大小，以提供開發團隊後續進行task拆分\u003e與認領 INPUT 產品列表 最新增量 團隊容量 歷史資料 OUTPUT 本次sprint的backlog Sprint Daily Scrum Meeting ：又稱站會，也是敏捷管理中讓大家最有印象的會議 ITEM 詳細說明 WHY 指定24小時的計劃 WHO Scrum Team WHEN 每天 固定時間 規定地點 WHAT 3個問題 我昨天作了什麼/我今天要做什麼/我有什麼問題 HOW LONG 10分鐘之內 INPUT Sprint待辦列表 OUTPUT Sprint待辦列表 Sprint Review Meeting：審視會議，又俗稱Demo會議，會議主要展示\u0026評核該次Sprint的增量成果 ITEM 詳細說明 WHY 檢視增量並調整 WHO Scrum Team + Stake Holder WHEN Sprint結束時 WHAT 1.done和undong的check 2.問題 3.成果演示 INPUT 增量 / Product Backlog / Issue List OUTPUT 修訂版Product Backlog/下一個Sprint的Sprint Backlog/獲取反饋促進合作 Sprint Retrospective Meeting：回顧會議，用來檢視回顧該次Sprint的執行狀況，秉持捨去不好的留下好的，並在之後Sprint持續精進 ITEM 詳細說明 WHY 回顧此次Sprint WHO Scrum Team + Stake Holder WHEN Sprint結束時 WHAT 1.專案回顧 2.收集資訊 3.收集回饋 4.持續追蹤 INPUT Sprint資訊 OUTPUT Action 清單 ","date":"2021-12-26","objectID":"/projectmanagent2/:1:4","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"5個價值(scrum values)Scrum團隊緊密合作，是團隊該每個人具備的內容，也是Scrum中心思維 Courage(勇氣) Focus(專注) Commitment(承諾) Repect(尊重) Openness(開放) ","date":"2021-12-26","objectID":"/projectmanagent2/:1:5","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"2. 甚麼是MVP最小可行性產品(Minimum Viable Product)當判斷目標且發現適合使用敏捷式管理時，往往對於未來充滿不確定性，但如何最低成本、速度、反映到市場上並測試可行就是一大關鍵 敏捷專案把一個想解決的事情給切分成一塊一塊慢慢去執行和驗證，但要怎麼切的思考方向也要圍繞在每次切成塊的東西是否符合可行性且可以持續堆疊。 自己在跟人解釋MVP時 很愛用這張圖來譬喻 目標為解決人類移動上的問題，假設每個階段都為每個Sprint的增量，上方可以看到第一次增量僅有一顆輪子並無法拿來做為解決人類移動的可行性，而同階段下方可以看到為一個滑板，但其符合最小且可行性。 總結當我們在規劃每次Sprint時，盡量以達成MVP為目標來規劃 ","date":"2021-12-26","objectID":"/projectmanagent2/:2:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"參考visual-paradigm agilemanifesto org codobux 呼~ 篇長有點多，但卻是敏捷管理法不可忽略的知識還有實作上常常被人遺忘的核心理念，下一篇來撰寫一下運用Azure DevOps 來實作敏捷專案管理吧~ ","date":"2021-12-26","objectID":"/projectmanagent2/:3:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 2","uri":"/projectmanagent2/"},{"categories":["專案管理 筆記"],"content":"在許多公司的軟體發展管理上，逐漸盛行敏捷管理(Agile)也很常聽到名詞敏捷、快速、Scrum、站會等，在幾次面試新進員工跟了解其在過去參與的敏捷管理的經驗，發現認知與執行的內容慘不忍睹，喪失了敏捷其核心理念，有鑒於此還是筆記一下敏捷管理方法的實務和常見的瀑布式開發(WaterFall)差異到底在哪呢? ","date":"2021-11-02","objectID":"/projectmanagent1/:0:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"1. 敏捷理念敏捷一詞源自敏捷宣言(Agile Manifesto)，著重於 個人與互動 重於 流程與工具 可用的軟體 重於 詳盡的文件 與客戶合作 重於 合約協商 回應變化 重於 遵循計劃 裡面也很表明提出的看法優先序左邊項目大於右邊項目，但但但但不表示右方不必執行與規劃，其背後理念(principles)挑出幾個最常被誤會跟沒有落實的觀點 最優先的任務，是透過及早並持續地交付有價值的軟體來滿足客戶需求。 經常交付可用的軟體，週期可以從幾週到幾個月，以較短時間間隔為佳。 產品人員與軟體開發者必須在專案全程中天天一起工作。 面對面的溝通是傳遞資訊給開發團隊及團隊成員之間效率最高且效果最佳的方法。 ","date":"2021-11-02","objectID":"/projectmanagent1/:1:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"綜合以上其實會發現敏捷的快速來自於持續地交付有用的軟體，關鍵也在建構溝通合作的自我管理團隊 ","date":"2021-11-02","objectID":"/projectmanagent1/:1:1","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"2. 敏捷 VS 瀑布敏捷說穿只是一個思維，常聽到的Scrum為其實現這個理念的其中一個流派，讓我們先來試問團隊是否需要敏捷? ","date":"2021-11-02","objectID":"/projectmanagent1/:2:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"產品市場和需求是否明確? 舉個例子 就如耳熟能詳的產品ERP、電商系統等，這類軟體產品通常在市場均有成熟的解決方案，若是想要參考模仿開發出相似軟體產品均可借鏡，也就對於需求和市場有一定的認知和範圍，那此時是否反而用常見的瀑布式開發來完整規劃參與的人、事、物、時間、成本等，也能較掌握風險的控管。 ","date":"2021-11-02","objectID":"/projectmanagent1/:2:1","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"以上點出敏捷並不適用於任何情境","date":"2021-11-02","objectID":"/projectmanagent1/:2:2","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"而是針對目標選用合適的管理方法為最佳方式 讓我們來看看敏捷流程跟瀑布的流程差異 本質差異除了做事思維的不同外，相對於敏捷，瀑布式在個階段均須有對應文件與規劃(如SRS、SDS、WBS等)缺一均會影響專案執行和品質。 敏捷注重團隊溝通和做團隊認為最優先的事情以利最短時間內完成最小可行性產品(MVP)並持續驗證產品可行性，快速即時修正調整產品方向，依此來降低執行專案風險 ","date":"2021-11-02","objectID":"/projectmanagent1/:2:3","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"參考visual-paradigm agilemanifesto org 下一篇來介紹Scrum 執行實務內容和最小可行性產品(MVP) ","date":"2021-11-02","objectID":"/projectmanagent1/:3:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["Tools 筆記"],"content":"相信在許多軟體開發上，前期分析難免會碰到資料庫的設計與規劃，若手頭上剛好有VS Code 這套IDE工具，可以來試試這個很讚的plugin吧！ ","date":"2021-10-02","objectID":"/erdeditor/:0:0","tags":["Tools"],"title":"[Tools]VS Code Plugin - ERD Editor 筆記","uri":"/erdeditor/"},{"categories":["Tools 筆記"],"content":"1. 說明 需先具備安裝 VS Code (根據自身OS選擇合適的版本) 為使ERD設計能有一致性的規劃(不論DB使用哪種版本 Ex: MSSQL、MySQL..等)和Generate DB Script，也能使DB架構規劃能版控 ","date":"2021-10-02","objectID":"/erdeditor/:1:0","tags":["Tools"],"title":"[Tools]VS Code Plugin - ERD Editor 筆記","uri":"/erdeditor/"},{"categories":["Tools 筆記"],"content":"2. ERD Editor 使用 在VS CODE 左方控制列尋找Extensions或 CTRL + SHIFT+ X ，接著輸入 vuerd 找到該套件並安裝 ERD 檔案設定 若為新專案則在LDSP.XXXX.Respository內找到DBERD的資料夾，並在該資料夾底下修改Template.vuerd.json 的file，右邊視窗看到檔案內容和點擊右上角切換GUI編輯模式。 ERD 設計 擁有GUI 介面，換句話說可以直接在介面上做規劃，協助更快更直覺的操作。 Generator SQL DDL 能產出各大主流DB的DDL語法(Export 前需先選擇Database版本，DDL才會產出正確的版本! )。 SQL DDL Import 將DDL匯入反向產生ERD關聯圖 ","date":"2021-10-02","objectID":"/erdeditor/:2:0","tags":["Tools"],"title":"[Tools]VS Code Plugin - ERD Editor 筆記","uri":"/erdeditor/"},{"categories":["Tools 筆記"],"content":"3. 參考ERD Editor ","date":"2021-10-02","objectID":"/erdeditor/:3:0","tags":["Tools"],"title":"[Tools]VS Code Plugin - ERD Editor 筆記","uri":"/erdeditor/"},{"categories":["C Sharp 筆記"],"content":"呼 已經許久沒更新文章了，距離上一次是2018…，當然這之中也經歷了職涯轉換、\u0008部落格由原本的Hexo 換到Hugo 等，再來陸陸續續會慢慢整理弄上來\u0008\u0008\u0008\u0008\u0008。 相信在公司碰過文件轉換的需求（如word to pdf），特別又是office 系列一定用過DCOM來處理這個問題，但微軟已經不support 這個元件，所以使用上會出現一些怪怪問題。。 所以就開始Survey 一些不靠DCOM也能轉的套件，找了幾間最後還是看上 Aspose \u0008，聯絡了一下拿到了 Temporary License 但原先提供的simple code 看似兩三行可以解決，純英文的文件或許可行，但遇到其他語言如高綿文就會發現轉出來的PDF還是會有亂碼。。。 Aspose.Words.License lic = new Aspose.Words.License(); lic.SetLicense(path + \"Aspose.Words.lic\"); Document doc = new Document(path + \"input.docx\"); doc.Save(path + \"output.pdf\"); 後來得知需要 Enable OpenType Features 才行～ ","date":"2021-04-21","objectID":"/aspose/:0:0","tags":["C Sharp"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"1. Nuget 安裝要先從Nuget安裝以下兩個套件 Aspose.Words Aspose.Words.Shaping.HarfBuzz ","date":"2021-04-21","objectID":"/aspose/:1:0","tags":["C Sharp"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"2. 範例(ps.範例為原始word轉pdf) MemoryStream ms = new MemoryStream(); uploadfile.CopyTo(ms); Document doc = new Document(ms); var path = @\"./file/\" + uploadfile.FileName\".pdf\"; doc.LayoutOptions.TextShaperFactory = Aspose.Words.Shaping.HarfBuzz.HarfBuzzTextShaperFactory.Instance; doc.Save(path); ","date":"2021-04-21","objectID":"/aspose/:2:0","tags":["C Sharp"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"在開發期間使用的Entity是在test環境下，但要切換到正式環境不用整個專案review一次或者把entity拿掉才能切換過去，不能針對xxx.edmx底下的DbContext直接修改，這是系統自動產生的，但可以再另外partail class要切換的Connection name 。 ps.這邊是系統自動產生，不要在這邊修改 ","date":"2018-12-02","objectID":"/entityframwork1/:0:0","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityframwork1/"},{"categories":["C Sharp 筆記"],"content":"1. 解說","date":"2018-12-02","objectID":"/entityframwork1/:1:0","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityframwork1/"},{"categories":["C Sharp 筆記"],"content":"1.1 在專案中產生一個Partial class public partial class Entities : DbContext { public Entities (string ConnectionString):base(ConnectionString) { } } public class SwitchDbContext { public Entities CreateDbContext(string connectionstring) { switch (connectionstring) { //QA連線 case \"QA\": return new Entities(); //Production連線 case \"Production\": return new Entities(\"name=EntitiesP\"); //預設為QA連線 default: return new Entities(); } } } ### 1.2 修改設定檔\r接下來到app.config or web.config 裡面找到\u003cappSettings\u003e加入這些，這樣未來只要改app.config or web.config就能切換。\r##### 一樣到`app.config` or `web.config` 裡面找到``後複製`name=Entities`這一條，在下方貼上並將`name`改成`EntitiesP`，`ConnectionString`需自行修改成自己的正式環境資訊。\r![](https://i.imgur.com/tFJGhht.png)\r接下來在原先宣告Entity的地方改成如下圖,如需切換Entity Connection只要修改app.config or web.config裡面的內容就好了。\r","date":"2018-12-02","objectID":"/entityframwork1/:1:1","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityframwork1/"},{"categories":["JQuery 筆記"],"content":"紀錄一下許早之前遇到的Cross-Domain問題，在Local測試得很開心都沒問題，一把東西丟到測試環境這問題就出現了… 原因可以參考WIKI的介紹Cross-origin resource sharing 簡單來說用Ajax向非同域請求資源會先丟一個預檢(preflight) HTTP OPTIONS 的方法給Server端檢驗，若通過才會丟正式的request出去(get、post等等)，若非允許的跨域請求的需求沒有處理會被Reject，造成Ajax失敗，解法有很多種，但我還是用最簡單的方式Access-Control-Allow-Origin針對server端處理。 ","date":"2018-09-12","objectID":"/csharp2/:0:0","tags":["C Sharp","JQuery","JavaScript"],"title":"[C#、JQuery]Cross-Domain server 端處理","uri":"/csharp2/"},{"categories":["JQuery 筆記"],"content":"1. 解說web.config內的\u003csystem.webServer\u003e加入紅框部分，*代表允許任何人存取\r注意:這樣的方式很快但不代表適合任何人，若要限制也可以這樣寫Access-Control-Allow-Origin: http://xxxxx.com 其他也有JsonP的方式也是不錯的方式，有機會再發表一篇來解說吧~","date":"2018-09-12","objectID":"/csharp2/:1:0","tags":["C Sharp","JQuery","JavaScript"],"title":"[C#、JQuery]Cross-Domain server 端處理","uri":"/csharp2/"},{"categories":["C Sharp 筆記"],"content":"User這次給了一道題目，按照指定的規則且多個條件下排序資料…，這非得要實作IComparable來實現了。 在範例中有以下幾個重點 第一次排序為指定順序(Space冒號前的字串先排序) 第二次排序為小到大排序(Space整個排序) 第三次排序為小到大排序(Item排序) ","date":"2018-07-21","objectID":"/csharp1/:0:0","tags":["C Sharp"],"title":"[C#]自訂排序(Custom Sort)","uri":"/csharp1/"},{"categories":["C Sharp 筆記"],"content":"1. Example","date":"2018-07-21","objectID":"/csharp1/:1:0","tags":["C Sharp"],"title":"[C#]自訂排序(Custom Sort)","uri":"/csharp1/"},{"categories":["JQuery 筆記"],"content":"對於前端來說，許多專案針對Form的需求設計應該是百百種，常見的如動態欄位(Dynamic column)，本篇使用Jquery來實現 ","date":"2018-07-14","objectID":"/jquery1/:0:0","tags":["JQuery","JavaScript"],"title":"[JQuery]動態欄位(Dynamic column)","uri":"/jquery1/"},{"categories":["JQuery 筆記"],"content":"1. ExampleSee the Pen Dynamic colunm by LeoHe (@SungYuHe) on CodePen.\r","date":"2018-07-14","objectID":"/jquery1/:1:0","tags":["JQuery","JavaScript"],"title":"[JQuery]動態欄位(Dynamic column)","uri":"/jquery1/"},{"categories":["AngularJs 筆記"],"content":"公司專案使用AngularJs 1.6開發,面對使用者複雜又特殊的requirement ，一個page切多個controller也方便未來維護，那controller間如何來互相傳值呢? 在AngularJs中 $emit , $broadcast and $on 用來處理各controller事件處理 $on用來接收$emit , $broadcast的事件(event) $emit能向父級別parent controller傳遞事件(event)與資料(data) $broadcast向子級別child controller傳遞事件(event)與資料(data) ","date":"2018-06-09","objectID":"/angularjs/:0:0","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angularjs/"},{"categories":["AngularJs 筆記"],"content":"1. 說明 若同父級別向子級別傳遞事件($broadcast)，多個同level子級別的controller 可以一起接收到事件,但其中一個子級別傳遞事件($emit)，只有這個子級別的父級別可以收到事件，其他同level父級別controller無法收到事件 ","date":"2018-06-09","objectID":"/angularjs/:1:0","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angularjs/"},{"categories":["AngularJs 筆記"],"content":"1. ExampleSee the Pen AngularJs $emit , $broadcast and $on Example Note by LeoHe (@SungYuHe) on CodePen.\r","date":"2018-06-09","objectID":"/angularjs/:1:1","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angularjs/"},{"categories":["AngularJs 筆記"],"content":"2. 參考AngularJs function ","date":"2018-06-09","objectID":"/angularjs/:1:2","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angularjs/"},{"categories":null,"content":"About Me","date":"0001-01-01","objectID":"/page/about/:0:0","tags":null,"title":"","uri":"/page/about/"},{"categories":null,"content":"簡介一個由南到北又從北到南的軟體人，現任職於軟體新創公司擔任資訊部經理，目前著手於導入與發展領域驅動分析(DDD)、Agie(Scrum)、Cloud-Native… 參與過 Fin-tech 程式交易 補習班後勤管理系統 Global MES integration system 金融業 ERP開發維運和ERP轉型公版 會計產業雲端帳務平台(Web、App)並於政府計畫雲市集、數位共好推廣與上架 由於工作所學甚多，常常筆記丟東丟西，乾脆弄一個blog來記錄、整理一下順便也幫自己複習一下… ","date":"0001-01-01","objectID":"/page/about/:0:1","tags":null,"title":"","uri":"/page/about/"}]