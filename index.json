[{"categories":["專案管理 筆記"],"content":"在許多公司的軟體發展管理上，逐漸盛行敏捷管理(Agile)也很常聽到名詞敏捷、快速、Scrum等，在幾次面試新進員工跟了解其在過去參與的敏捷管理的經驗，發現認知與執行的內容慘不忍睹，喪失了敏捷其核心理念，有鑒於此還是筆記一下敏捷管理方法的實務和常見的瀑布式開發(WaterFall)差異到底在哪呢? ","date":"2021-11-02","objectID":"/projectmanagent1/:0:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"1. 敏捷理念敏捷一詞源自敏捷宣言(Agile Manifesto)，著重於 個人與互動 重於 流程與工具 可用的軟體 重於 詳盡的文件 與客戶合作 重於 合約協商 回應變化 重於 遵循計劃 裡面也很表明提出的看法優先序左邊項目大於右邊項目，但但但但不表示右方不必執行與規劃，其背後理念(principles)挑出幾個最常被誤會跟沒有落實的觀點 最優先的任務，是透過及早並持續地交付有價值的軟體來滿足客戶需求。 經常交付可用的軟體，週期可以從幾週到幾個月，以較短時間間隔為佳。 產品人員與軟體開發者必須在專案全程中天天一起工作。 面對面的溝通是傳遞資訊給開發團隊及團隊成員之間效率最高且效果最佳的方法。 ","date":"2021-11-02","objectID":"/projectmanagent1/:1:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"綜合以上其實會發現敏捷的快速來自於持續地交付有用的軟體，關鍵也在建構溝通合作的自我管理團隊 ","date":"2021-11-02","objectID":"/projectmanagent1/:1:1","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"2. 敏捷VS瀑布敏捷說穿只是一個思維，常聽到的Scrum為其實現這個理念的其中一個流派，讓我們先來試問團隊是否需要敏捷? ","date":"2021-11-02","objectID":"/projectmanagent1/:2:0","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"產品市場和需求是否明確? 舉個例子 就如耳熟能詳的產品ERP、電商系統等，這類軟體產品通常在市場均有成熟的解決方案，若是想要參考模仿開發出相似軟體產品均可借鏡，也就對於需求和市場有一定的認知和範圍，那此時是否反而用常見的瀑布式開發來完整規劃參與的人、事、物、時間、成本等，也能較掌握風險的控管。 ","date":"2021-11-02","objectID":"/projectmanagent1/:2:1","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"以上點出敏捷並不適用於任何情境","date":"2021-11-02","objectID":"/projectmanagent1/:2:2","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["專案管理 筆記"],"content":"而是針對目標選用合適的管理方法為最佳方式 讓我們來看看敏捷流程跟瀑布的流程差異 本質差異除了做事思維的不同外，相對於敏捷，瀑布式在個階段均須有對應文件與規劃(如SRS、SDS、WBS等)缺一均會影響專案執行和品質。 敏捷注重團隊溝通和做團隊認為最優先的事情以利最短時間內完成最小可行性產品(MVP)並持續驗證產品可行性，快速即時修正調整產品方向，依此來降低執行專案風險 下一篇來介紹Scrum 執行實務內容和最小可行性產品(MVP) ","date":"2021-11-02","objectID":"/projectmanagent1/:2:3","tags":["專案管理"],"title":"[專案管理]淺談敏捷專案管理實務Part 1","uri":"/projectmanagent1/"},{"categories":["Tools 筆記"],"content":"相信在許多軟體開發上，前期分析難免會碰到資料庫的設計與規劃，若手頭上剛好有VS Code 這套IDE工具，可以來試試這個很讚的plugin吧！ ","date":"2021-10-02","objectID":"/erdeditor/:0:0","tags":["Tools"],"title":"[Tools]VS Code Plugin - ERD Editor 筆記","uri":"/erdeditor/"},{"categories":["Tools 筆記"],"content":"1. 說明 需先具備安裝 VS Code (根據自身OS選擇合適的版本) 為使ERD設計能有一致性的規劃(不論DB使用哪種版本 Ex: MSSQL、MySQL..等)和Generate DB Script，也能使DB架構規劃能版控 ","date":"2021-10-02","objectID":"/erdeditor/:1:0","tags":["Tools"],"title":"[Tools]VS Code Plugin - ERD Editor 筆記","uri":"/erdeditor/"},{"categories":["Tools 筆記"],"content":"2. ERD Editor 使用 在VS CODE 左方控制列尋找Extensions或 CTRL + SHIFT+ X ，接著輸入 vuerd 找到該套件並安裝 ERD 檔案設定 若為新專案則在LDSP.XXXX.Respository內找到DBERD的資料夾，並在該資料夾底下修改Template.vuerd.json 的file，右邊視窗看到檔案內容和點擊右上角切換GUI編輯模式。 ERD 設計 擁有GUI 介面，換句話說可以直接在介面上做規劃，協助更快更直覺的操作。 Generator SQL DDL 能產出各大主流DB的DDL語法(Export 前需先選擇Database版本，DDL才會產出正確的版本! )。 SQL DDL Import 將DDL匯入反向產生ERD關聯圖 ","date":"2021-10-02","objectID":"/erdeditor/:2:0","tags":["Tools"],"title":"[Tools]VS Code Plugin - ERD Editor 筆記","uri":"/erdeditor/"},{"categories":["Tools 筆記"],"content":"3. 參考ERD Editor ","date":"2021-10-02","objectID":"/erdeditor/:3:0","tags":["Tools"],"title":"[Tools]VS Code Plugin - ERD Editor 筆記","uri":"/erdeditor/"},{"categories":["C Sharp 筆記"],"content":"呼 已經許久沒更新文章了，距離上一次是2018…，當然這之中也經歷了職涯轉換、\u0008部落格由原本的Hexo 換到Hugo 等，再來陸陸續續會慢慢整理弄上來\u0008\u0008\u0008\u0008\u0008。 相信在公司碰過文件轉換的需求（如word to pdf），特別又是office 系列一定用過DCOM來處理這個問題，但微軟已經不support 這個元件，所以使用上會出現一些怪怪問題。。 所以就開始Survey 一些不靠DCOM也能轉的套件，找了幾間最後還是看上 Aspose \u0008，聯絡了一下拿到了 Temporary License 但原先提供的simple code 看似兩三行可以解決，純英文的文件或許可行，但遇到其他語言如高綿文就會發現轉出來的PDF還是會有亂碼。。。 Aspose.Words.License lic = new Aspose.Words.License(); lic.SetLicense(path + \"Aspose.Words.lic\"); Document doc = new Document(path + \"input.docx\"); doc.Save(path + \"output.pdf\"); 後來得知需要 Enable OpenType Features 才行～ ","date":"2021-04-21","objectID":"/aspose/:0:0","tags":["C Sharp"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"1. Nuget 安裝要先從Nuget安裝以下兩個套件 Aspose.Words Aspose.Words.Shaping.HarfBuzz ","date":"2021-04-21","objectID":"/aspose/:1:0","tags":["C Sharp"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"2. 範例(ps.範例為原始word轉pdf) MemoryStream ms = new MemoryStream(); uploadfile.CopyTo(ms); Document doc = new Document(ms); var path = @\"./file/\" + uploadfile.FileName\".pdf\"; doc.LayoutOptions.TextShaperFactory = Aspose.Words.Shaping.HarfBuzz.HarfBuzzTextShaperFactory.Instance; doc.Save(path); ","date":"2021-04-21","objectID":"/aspose/:2:0","tags":["C Sharp"],"title":"[C#]Aspose for . NET 筆記","uri":"/aspose/"},{"categories":["C Sharp 筆記"],"content":"在開發期間使用的Entity是在test環境下，但要切換到正式環境不用整個專案review一次或者把entity拿掉才能切換過去，不能針對xxx.edmx底下的DbContext直接修改，這是系統自動產生的，但可以再另外partail class要切換的Connection name 。 ps.這邊是系統自動產生，不要在這邊修改 ","date":"2018-12-02","objectID":"/entityframwork1/:0:0","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityframwork1/"},{"categories":["C Sharp 筆記"],"content":"1. 解說","date":"2018-12-02","objectID":"/entityframwork1/:1:0","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityframwork1/"},{"categories":["C Sharp 筆記"],"content":"1.1 在專案中產生一個Partial class public partial class Entities : DbContext { public Entities (string ConnectionString):base(ConnectionString) { } } public class SwitchDbContext { public Entities CreateDbContext(string connectionstring) { switch (connectionstring) { //QA連線 case \"QA\": return new Entities(); //Production連線 case \"Production\": return new Entities(\"name=EntitiesP\"); //預設為QA連線 default: return new Entities(); } } } ### 1.2 修改設定檔 接下來到app.config or web.config 裡面找到\u003cappSettings\u003e加入這些，這樣未來只要改app.config or web.config就能切換。\r##### 一樣到`app.config` or `web.config` 裡面找到``後複製`name=Entities`這一條，在下方貼上並將`name`改成`EntitiesP`，`ConnectionString`需自行修改成自己的正式環境資訊。 ![](https://i.imgur.com/tFJGhht.png) 接下來在原先宣告Entity的地方改成如下圖,如需切換Entity Connection只要修改app.config or web.config裡面的內容就好了。\r","date":"2018-12-02","objectID":"/entityframwork1/:1:1","tags":["C Sharp","Entity"],"title":"[C#]切換不同環境 Entity ","uri":"/entityframwork1/"},{"categories":["JQuery 筆記"],"content":"紀錄一下許早之前遇到的Cross-Domain問題，在Local測試得很開心都沒問題，一把東西丟到測試環境這問題就出現了… 原因可以參考WIKI的介紹Cross-origin resource sharing 簡單來說用Ajax向非同域請求資源會先丟一個預檢(preflight) HTTP OPTIONS 的方法給Server端檢驗，若通過才會丟正式的request出去(get、post等等)，若非允許的跨域請求的需求沒有處理會被Reject，造成Ajax失敗，解法有很多種，但我還是用最簡單的方式Access-Control-Allow-Origin針對server端處理。 ","date":"2018-09-12","objectID":"/csharp2/:0:0","tags":["C Sharp","JQuery","JavaScript"],"title":"[C#、JQuery]Cross-Domain server 端處理","uri":"/csharp2/"},{"categories":["JQuery 筆記"],"content":"1. 解說web.config內的\u003csystem.webServer\u003e加入紅框部分，*代表允許任何人存取\r注意:這樣的方式很快但不代表適合任何人，若要限制也可以這樣寫Access-Control-Allow-Origin: http://xxxxx.com 其他也有JsonP的方式也是不錯的方式，有機會再發表一篇來解說吧~","date":"2018-09-12","objectID":"/csharp2/:1:0","tags":["C Sharp","JQuery","JavaScript"],"title":"[C#、JQuery]Cross-Domain server 端處理","uri":"/csharp2/"},{"categories":["C Sharp 筆記"],"content":"User這次給了一道題目，按照指定的規則且多個條件下排序資料…，這非得要實作IComparable來實現了。 在範例中有以下幾個重點 第一次排序為指定順序(Space冒號前的字串先排序) 第二次排序為小到大排序(Space整個排序) 第三次排序為小到大排序(Item排序) ","date":"2018-07-21","objectID":"/csharp1/:0:0","tags":["C Sharp"],"title":"[C#]自訂排序(Custom Sort)","uri":"/csharp1/"},{"categories":["C Sharp 筆記"],"content":"1. Example","date":"2018-07-21","objectID":"/csharp1/:1:0","tags":["C Sharp"],"title":"[C#]自訂排序(Custom Sort)","uri":"/csharp1/"},{"categories":["JQuery 筆記"],"content":"對於前端來說，許多專案針對Form的需求設計應該是百百種，常見的如動態欄位(Dynamic column)，本篇使用Jquery來實現 ","date":"2018-07-14","objectID":"/jquery1/:0:0","tags":["JQuery","JavaScript"],"title":"[JQuery]動態欄位(Dynamic column)","uri":"/jquery1/"},{"categories":["JQuery 筆記"],"content":"1. ExampleSee the Pen Dynamic colunm by LeoHe (@SungYuHe) on CodePen. ","date":"2018-07-14","objectID":"/jquery1/:1:0","tags":["JQuery","JavaScript"],"title":"[JQuery]動態欄位(Dynamic column)","uri":"/jquery1/"},{"categories":["AngularJs 筆記"],"content":"公司專案使用AngularJs 1.6開發,面對使用者複雜又特殊的requirement ，一個page切多個controller也方便未來維護，那controller間如何來互相傳值呢? 在AngularJs中 $emit , $broadcast and $on 用來處理各controller事件處理 $on用來接收$emit , $broadcast的事件(event) $emit能向父級別parent controller傳遞事件(event)與資料(data) $broadcast向子級別child controller傳遞事件(event)與資料(data) ","date":"2018-06-09","objectID":"/angularjs/:0:0","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angularjs/"},{"categories":["AngularJs 筆記"],"content":"1. 說明 若同父級別向子級別傳遞事件($broadcast)，多個同level子級別的controller 可以一起接收到事件,但其中一個子級別傳遞事件($emit)，只有這個子級別的父級別可以收到事件，其他同level父級別controller無法收到事件 ","date":"2018-06-09","objectID":"/angularjs/:1:0","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angularjs/"},{"categories":["AngularJs 筆記"],"content":"1. ExampleSee the Pen AngularJs $emit , $broadcast and $on Example Note by LeoHe (@SungYuHe) on CodePen. ","date":"2018-06-09","objectID":"/angularjs/:1:1","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angularjs/"},{"categories":["AngularJs 筆記"],"content":"2. 參考AngularJs function ","date":"2018-06-09","objectID":"/angularjs/:1:2","tags":["AngularJs"],"title":"[AngularJS] $broadcast , $emit , $on 事件處理機制筆記","uri":"/angularjs/"},{"categories":null,"content":"About Me","date":"0001-01-01","objectID":"/page/about/:0:0","tags":null,"title":"","uri":"/page/about/"},{"categories":null,"content":"簡介一個由南到北又從北到南的軟體人，現任職於軟體新創公司擔任資訊部經理，目前著手於導入與發展領域驅動分析(DDD)、Agie(Scrum)、Cloud-Native… 參與過 Fin-tech 程式交易 補習班後勤管理系統 Global MES integration system 金融業 ERP開發維運和ERP轉型公版 會計產業雲端帳務平台(Web、App)並於政府計畫雲市集、數位共好推廣與上架 由於工作所學甚多，常常筆記丟東丟西，乾脆弄一個blog來記錄、整理一下順便也幫自己複習一下… ","date":"0001-01-01","objectID":"/page/about/:0:1","tags":null,"title":"","uri":"/page/about/"}]